{
	// Place your underbudget4 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Package statement": {
		"scope": "kotlin",
		"prefix": "pkg",
		"body": [
			"package com.vimofthevine.underbudget.$1",
			"",
			"$0"
		],
	},
	"Import from UnderBudget...": {
		"scope": "kotlin",
		"prefix": "importub",
		"body": [
			"import com.vimofthevine.underbudget.$1"
		],
	},
	"Import LoggerFactory": {
		"scope": "kotlin",
		"prefix": "importlogger",
		"body": [
			"import org.slf4j.LoggerFactory"
		],
	},
	"Declare logger variable": {
		"scope": "kotlin",
		"prefix": "vallogger",
		"body": [
      "private val logger = LoggerFactory.getLogger(javaClass)"
		],
	},
	"DTO boilerplate": {
		"scope": "kotlin",
		"prefix": "dto",
		"body": [
			"package com.vimofthevine.underbudget.dto",
			"",
			"import java.util.UUID",
			"",
			"import javax.validation.constraints.*",
			"",
			"data class $1(",
			"  $0",
			")",
			""
		]
	}
}